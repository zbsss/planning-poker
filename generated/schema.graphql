### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Card {
  chosenCard: String
}

type Mutation {
  chooseCard(card: String, tableId: String!): Card!
  createTable(name: String!): Table!
  joinTable(tableId: String!): Player!
  registerUser: UserProfile!
}

type Player {
  chosenCard: String
  role: PlayerRole!
  tableId: String!
  userId: String!
  userProfile: UserProfile!
}

enum PlayerRole {
  ADMIN
  PLAYER
}

type Query {
  playerReadiness(tableId: String!): [Readiness!]!
  table(id: String!): Table!
  tables: [Table!]!
}

type Readiness {
  isReady: Boolean!
  user: UserProfile!
}

type Subscription {
  playerReadiness(tableId: String!): [Readiness!]!
}

type Table {
  id: String!
  name: String!
  players: [Player!]!
  revealAt: String
}

type UserProfile {
  email: String!
  id: String!
  image: String
  name: String!
}